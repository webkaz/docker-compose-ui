version: '2'

services:

    nginx-proxy:
      image: jwilder/nginx-proxy
      container_name: nginx-proxy
      ports:
        - "80:80"
      volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        
    mongo:
      image: mongo
      volumes:
        - mongo-data:/data/db
        - mongo-configdb:/data/configdb
        - mongo-dump:/dump
      command: mongod --smallfiles --oplogSize 128

    rocketchat:
      image: rocketchat/rocket.chat:0.35.0
      volumes:
    # .envファイルによる置き換えはできない。exportで環境変数の設定が事前に必要。
    #    - "${LOCAL_MOUNT_ROOT}/rocket-updoad:/app/uploads"
        - "rocket-updoad:/app/uploads"
      environment:
        - PORT=3000
        - ROOT_URL=http://localhost
        - MONGO_URL=mongodb://mongo:27017/rocketchat
    #    - MAIL_URL=smtp://smtp.email
    #    - HTTP_PROXY=http://proxy.domain.com
    #    - HTTPS_PROXY=http://proxy.domain.com
    # リバプロ自動設定用
        - VIRTUAL_HOST=rocketchat.127.0.0.1.xip.io
      links:
        - mongo:mongo
      ports:
        - 3000:3000

    # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
    hubot:
      image: rocketchat/hubot-rocketchat:v0.1.4
      environment:
        # linksで指定する場合は、コンテナ内のポートを指定する。
        - ROCKETCHAT_URL=rocketchat:3000
        - ROCKETCHAT_ROOM=GENERAL
        - ROCKETCHAT_USER=bot
        - ROCKETCHAT_PASSWORD=botpassword
        - BOT_NAME=bot
    # you can add more scripts as you'd like here, they need to be installable by npm
        - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
      links:
        - rocketchat:rocketchat
    # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
      ports:
        - 3001:8080
        
# 各環境ごとにどこにvolumeをマッピングするか定義。hostOS or Winなど。
# マッピングなしの場合は自動でhostOSに指定される。場所は、docker volume inspect で確認可能。
volumes:
  rocket-updoad:
    driver: local
  mongo-data:
    driver: local
  mongo-configdb:
    driver: local
  mongo-dump:
    driver: local
  